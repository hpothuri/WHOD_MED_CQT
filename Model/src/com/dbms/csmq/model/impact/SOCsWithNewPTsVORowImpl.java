package com.dbms.csmq.model.impact;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Sep 13 16:18:11 EDT 2011
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SOCsWithNewPTsVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        DictContentId {
            public Object get(SOCsWithNewPTsVORowImpl obj) {
                return obj.getDictContentId();
            }

            public void put(SOCsWithNewPTsVORowImpl obj, Object value) {
                obj.setDictContentId((Number)value);
            }
        }
        ,
        Term {
            public Object get(SOCsWithNewPTsVORowImpl obj) {
                return obj.getTerm();
            }

            public void put(SOCsWithNewPTsVORowImpl obj, Object value) {
                obj.setTerm((String)value);
            }
        }
        ,
        CountPc1PredictContentId {
            public Object get(SOCsWithNewPTsVORowImpl obj) {
                return obj.getCountPc1PredictContentId();
            }

            public void put(SOCsWithNewPTsVORowImpl obj, Object value) {
                obj.setCountPc1PredictContentId((Number)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(SOCsWithNewPTsVORowImpl object);

        public abstract void put(SOCsWithNewPTsVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int DICTCONTENTID = AttributesEnum.DictContentId.index();
    public static final int TERM = AttributesEnum.Term.index();
    public static final int COUNTPC1PREDICTCONTENTID = AttributesEnum.CountPc1PredictContentId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SOCsWithNewPTsVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute DictContentId.
     * @return the DictContentId
     */
    public Number getDictContentId() {
        return (Number) getAttributeInternal(DICTCONTENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DictContentId.
     * @param value value to set the  DictContentId
     */
    public void setDictContentId(Number value) {
        setAttributeInternal(DICTCONTENTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Term.
     * @return the Term
     */
    public String getTerm() {
        return (String) getAttributeInternal(TERM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Term.
     * @param value value to set the  Term
     */
    public void setTerm(String value) {
        setAttributeInternal(TERM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CountPc1PredictContentId.
     * @return the CountPc1PredictContentId
     */
    public Number getCountPc1PredictContentId() {
        return (Number) getAttributeInternal(COUNTPC1PREDICTCONTENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CountPc1PredictContentId.
     * @param value value to set the  CountPc1PredictContentId
     */
    public void setCountPc1PredictContentId(Number value) {
        setAttributeInternal(COUNTPC1PREDICTCONTENTID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
