package com.dbms.csmq.model.service.server.serviceinterface;

import com.dbms.csmq.model.service.common.ViewObjTMSQuerySDO;
import com.dbms.csmq.model.service.common.serviceinterface.ServiceModuleService;

import java.lang.reflect.Method;

import java.util.List;

import javax.ejb.Remote;
import javax.ejb.Stateless;

import javax.interceptor.Interceptors;

import oracle.jbo.common.Diagnostic;
import oracle.jbo.common.sdo.SDOHelper;
import oracle.jbo.common.service.types.AttrCtrlHints;
import oracle.jbo.common.service.types.FindControl;
import oracle.jbo.common.service.types.FindCriteria;
import oracle.jbo.server.svc.ServiceContextInterceptor;
import oracle.jbo.server.svc.ServiceImpl;
import oracle.jbo.service.errors.ServiceException;

import oracle.webservices.annotations.PortableWebService;
import oracle.webservices.annotations.async.AsyncWebService;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Aug 22 10:44:44 EDT 2013
// ---------------------------------------------------------------------
@Interceptors( { ServiceContextInterceptor.class })
@AsyncWebService
@Stateless(name="com.dbms.csmq.model.service.common.ServiceModuleServiceBean", mappedName="ServiceModuleServiceBean")
@Remote(ServiceModuleService.class)
@PortableWebService(targetNamespace="/com/dbms/csmq/model/service/common/", serviceName="ServiceModuleService", portName="ServiceModuleServiceSoapHttpPort",
    endpointInterface="com.dbms.csmq.model.service.common.serviceinterface.ServiceModuleService")
public class ServiceModuleServiceImpl extends ServiceImpl implements ServiceModuleService {
    private static boolean _isInited = false;

    /**
     * This is the default constructor (do not remove).
     */
    public ServiceModuleServiceImpl() {
        init();
        setApplicationModuleDefName("com.dbms.csmq.model.service.ServiceModule");
        setConfigurationName("ServiceModuleService");
    }


    /**
     * Generated method. Do not modify. Do initialization in the constructor
     */
    protected void init() {
        if (_isInited) {
            return;
        }
        synchronized (ServiceModuleServiceImpl.class) {
            if (_isInited) {
                return;
            }
            try {
                SDOHelper.INSTANCE.defineSchema("com/dbms/csmq/model/service/common/serviceinterface/", "ServiceModuleService.xsd");
                _isInited = true;
            } catch (Exception ex) {
                Diagnostic.printStackTrace(ex);
            }
        }
    }

    /**
     * findViewObjTMSQuery1: generated method. Do not modify.
     */
    public List<ViewObjTMSQuerySDO> findViewObjTMSQuery1(FindCriteria findCriteria, FindControl findControl) throws ServiceException {
        return (List<ViewObjTMSQuerySDO>)find(findCriteria, findControl, "ViewObjTMSQuery1", ViewObjTMSQuerySDO.class);
    }

    /**
     * getDfltCtrlHints: generated method. Do not modify.
     */
    public List<AttrCtrlHints> getDfltCtrlHints(String viewName, String localeName) throws ServiceException {
        return super.getCtrlHints(viewName, localeName);
    }

    /**
     * getDfltCtrlHintsAsync: generated method. Do not modify.
     */
    public List<AttrCtrlHints> getDfltCtrlHintsAsync(String viewName, String localeName) throws ServiceException {
        return getDfltCtrlHints(viewName, localeName);
    }

    /**
     * findViewObjTMSQuery1Async: generated method. Do not modify.
     */
    public List<ViewObjTMSQuerySDO> findViewObjTMSQuery1Async(FindCriteria findCriteria, FindControl findControl) throws ServiceException {
        return findViewObjTMSQuery1(findCriteria, findControl);
    }

    /**
     * findViewObjTMSQuery1ViewObjTMSQueryCriteria: generated method. Do not modify.
     */
    public List<ViewObjTMSQuerySDO> findViewObjTMSQuery1ViewObjTMSQueryCriteria(FindCriteria findCriteria, String dictContentID,
                                                                                FindControl findControl) throws ServiceException {
        return (List<ViewObjTMSQuerySDO>)find(findCriteria, findControl, "ViewObjTMSQuery1", ViewObjTMSQuerySDO.class, "ViewObjTMSQueryCriteria",
                                              new NamedParam[] { new NamedParam("Variable", dictContentID) });
    }

    /**
     * findViewObjTMSQuery1ViewObjTMSQueryCriteriaAsync: generated method. Do not modify.
     */
    public List<ViewObjTMSQuerySDO> findViewObjTMSQuery1ViewObjTMSQueryCriteriaAsync(FindCriteria findCriteria, String dictContentID,
                                                                                     FindControl findControl) throws ServiceException {
        return findViewObjTMSQuery1ViewObjTMSQueryCriteria(findCriteria, dictContentID, findControl);
    }
}
