package com.dbms.csmq.model.designee;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Aug 07 10:21:41 EDT 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class designeeListVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        PersonName {
            public Object get(designeeListVORowImpl obj) {
                return obj.getPersonName();
            }

            public void put(designeeListVORowImpl obj, Object value) {
                obj.setPersonName((String)value);
            }
        }
        ,
        OracleUser {
            public Object get(designeeListVORowImpl obj) {
                return obj.getOracleUser();
            }

            public void put(designeeListVORowImpl obj, Object value) {
                obj.setOracleUser((String)value);
            }
        }
        ,
        OracleNmatRole {
            public Object get(designeeListVORowImpl obj) {
                return obj.getOracleNmatRole();
            }

            public void put(designeeListVORowImpl obj, Object value) {
                obj.setOracleNmatRole((String)value);
            }
        }
        ,
        OaAccountName {
            public Object get(designeeListVORowImpl obj) {
                return obj.getOaAccountName();
            }

            public void put(designeeListVORowImpl obj, Object value) {
                obj.setOaAccountName((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(designeeListVORowImpl object);

        public abstract void put(designeeListVORowImpl object, Object value);

        public int index() {
            return designeeListVORowImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return designeeListVORowImpl.AttributesEnum.firstIndex() + designeeListVORowImpl.AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = designeeListVORowImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int PERSONNAME = AttributesEnum.PersonName.index();
    public static final int ORACLEUSER = AttributesEnum.OracleUser.index();
    public static final int ORACLENMATROLE = AttributesEnum.OracleNmatRole.index();
    public static final int OAACCOUNTNAME = AttributesEnum.OaAccountName.index();

    /**
     * This is the default constructor (do not remove).
     */
    public designeeListVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute PersonName.
     * @return the PersonName
     */
    public String getPersonName() {
        return (String) getAttributeInternal(PERSONNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PersonName.
     * @param value value to set the  PersonName
     */
    public void setPersonName(String value) {
        setAttributeInternal(PERSONNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OracleUser.
     * @return the OracleUser
     */
    public String getOracleUser() {
        return (String) getAttributeInternal(ORACLEUSER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OracleUser.
     * @param value value to set the  OracleUser
     */
    public void setOracleUser(String value) {
        setAttributeInternal(ORACLEUSER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OracleNmatRole.
     * @return the OracleNmatRole
     */
    public String getOracleNmatRole() {
        return (String) getAttributeInternal(ORACLENMATROLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OracleNmatRole.
     * @param value value to set the  OracleNmatRole
     */
    public void setOracleNmatRole(String value) {
        setAttributeInternal(ORACLENMATROLE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OaAccountName.
     * @return the OaAccountName
     */
    public String getOaAccountName() {
        return (String) getAttributeInternal(OAACCOUNTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OaAccountName.
     * @param value value to set the  OaAccountName
     */
    public void setOaAccountName(String value) {
        setAttributeInternal(OAACCOUNTNAME, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
